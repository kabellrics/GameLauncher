// <auto-generated />
using System;
using GameLauncher.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameLauncher.DAL.Migrations
{
    [DbContext(typeof(GameLauncherContext))]
    [Migration("20240605103925_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("CollectionItem", b =>
                {
                    b.Property<Guid>("CollectionsID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ItemsID")
                        .HasColumnType("TEXT");

                    b.HasKey("CollectionsID", "ItemsID");

                    b.HasIndex("ItemsID");

                    b.ToTable("CollectionItem");
                });

            modelBuilder.Entity("GameLauncher.Models.Collection", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fanart")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShowOrder")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("GameLauncher.Models.Genre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ItemID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ItemID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("GameLauncher.Models.Item", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Artwork")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Banner")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cover")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Dev")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Editeur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LUPlatformesId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LUProfileId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LURegionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastStartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NbStart")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlatformesID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SearchName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StoreId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Video")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("LUProfileId");

                    b.HasIndex("LURegionId");

                    b.HasIndex("PlatformesID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("GameLauncher.Models.LUEmulateur", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("LUPlatformesID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("LUPlatformesID");

                    b.ToTable("Emulateurs");
                });

            modelBuilder.Entity("GameLauncher.Models.LUPlatformes", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Databases")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("IgdbId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("LUProfileID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("LUProfileID");

                    b.ToTable("Platformes");
                });

            modelBuilder.Entity("GameLauncher.Models.LUProfile", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageExtensions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LUEmulateurId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileFiles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StartupArguments")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StartupExecutable")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("LUEmulateurId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("GameLauncher.Models.LURegion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("GameLauncher.Models.MetadataGenre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("GenreId");

                    b.ToTable("MetadataGenres");
                });

            modelBuilder.Entity("CollectionItem", b =>
                {
                    b.HasOne("GameLauncher.Models.Collection", null)
                        .WithMany()
                        .HasForeignKey("CollectionsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameLauncher.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameLauncher.Models.Genre", b =>
                {
                    b.HasOne("GameLauncher.Models.Item", null)
                        .WithMany("Genres")
                        .HasForeignKey("ItemID");
                });

            modelBuilder.Entity("GameLauncher.Models.Item", b =>
                {
                    b.HasOne("GameLauncher.Models.LUProfile", "Profile")
                        .WithMany()
                        .HasForeignKey("LUProfileId");

                    b.HasOne("GameLauncher.Models.LURegion", "Region")
                        .WithMany()
                        .HasForeignKey("LURegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameLauncher.Models.LUPlatformes", "Platformes")
                        .WithMany()
                        .HasForeignKey("PlatformesID");

                    b.Navigation("Platformes");

                    b.Navigation("Profile");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("GameLauncher.Models.LUEmulateur", b =>
                {
                    b.HasOne("GameLauncher.Models.LUPlatformes", null)
                        .WithMany("Emulators")
                        .HasForeignKey("LUPlatformesID");
                });

            modelBuilder.Entity("GameLauncher.Models.LUPlatformes", b =>
                {
                    b.HasOne("GameLauncher.Models.LUProfile", null)
                        .WithMany("Platformes")
                        .HasForeignKey("LUProfileID");
                });

            modelBuilder.Entity("GameLauncher.Models.LUProfile", b =>
                {
                    b.HasOne("GameLauncher.Models.LUEmulateur", null)
                        .WithMany("Profiles")
                        .HasForeignKey("LUEmulateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameLauncher.Models.MetadataGenre", b =>
                {
                    b.HasOne("GameLauncher.Models.Genre", "Genre")
                        .WithMany("SubGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("GameLauncher.Models.Genre", b =>
                {
                    b.Navigation("SubGenres");
                });

            modelBuilder.Entity("GameLauncher.Models.Item", b =>
                {
                    b.Navigation("Genres");
                });

            modelBuilder.Entity("GameLauncher.Models.LUEmulateur", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("GameLauncher.Models.LUPlatformes", b =>
                {
                    b.Navigation("Emulators");
                });

            modelBuilder.Entity("GameLauncher.Models.LUProfile", b =>
                {
                    b.Navigation("Platformes");
                });
#pragma warning restore 612, 618
        }
    }
}
